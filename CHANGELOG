--------------------------------------------------------------------------------
                                 VERSION HISTORY

                 Get the latest version at "https://xenotech.nl"
--------------------------------------------------------------------------------

v1.0
----
New stuff:
- Crypto API added including:
  * Bcrypt
  * Blowfish
  * Serpent
- String API extended
  * Added safe xtstrncpy()
  * Base64 encode/decode
- Hash API extended
  * Added xtHashCRC32()
- Console aligned printing (left, centered, right), hard or word wrapping.
- Virtual memory management API (mman):
  * xtmmap
  * xtmunmap
  * xtmprotect
  * xtmsync
  * xtlock
  * xtmunlock
  * xtmremap
  Also works on Windows with some quirks. See documentation for more info.
- Thread API
  * Mutexes may be initialized lazily using XT_MUTEX_INIT. Linux already
    supports this natively, but the Windows code required some changes.
  * Windows 10 now supports xtThreadGetName() and xtThreadSetName().
- Configure script
  * Windows 32 and 64 bit support (cross compiling)
  * Custom installation directory
  * Added support for pkgconfig --cflags --libs
- Reintroduced _base.h (see global bugfix below)

API changes:
- Global
  * Private functions that were exposed in public headers (e.g. _xtGMTime())
    now have their own private header and are thus no longer publicly exposed.
- File API overhaul
  * Directory traversing using xtFileIterator
  * File information (access modes, access times, file types)
- Thread API
  * xtThreadJoin() offers the ability to capture the return value (void*) of the
    terminating thread.
- Demos
  * Formatting has been changed to make it more consistent and a nice report is
    printed to illustrate which tests passed, were expected to fail, skipped or
    failed.

Bug fixes:
- Global
  * Using the lib in a C++ project introduced compilation errors because C++
    does not support the restrict keyword.

- Console API
  * xtConsoleFillLine() would crash if using NULL as pattern

- Endian API
  * _xt_swap64() was broken since v0.5, but it has finally been fixed

- Sort API
  * xtSortStr() would crash if using XT_SORT_QUICK

- String API
  * xtStringSplit() libc API fix
  * xtvsnprintf() and variants buffer overflow fix

Removed:
- File API overhauled
  * Couple of old functions removed which are superseded by xtFileGetInfo()
    and xtFileIterator*().

v0.9
----
New stuff:
- Printf family added. These offer the same features as printf on Linux.
  * xtfprintf
  * xtprintf
  * xtsnprintf
  * xtvfprintf
  * xtvprintf
  * xtvsnprintf
- Proc API extended
  * Added xtProcGetName()
  * Added xtProcGetPids()
- Big time API overhaul. View the API changes for more info!
- xtRot13 is now branchless. This is a major performance gain!

API changes:
- All Windows code now uses xtsnprintf in favor of snprintf because snprintf is
  broken on Windows. The string is not always null-terminated.
- The File API now recognizes more file types.
- Time API overhaul
  * Accuracy of time retrieval functions has been increased up to nanoseconds
  * More clock types are now supported
  * Timestamps now use the new struct xtTimestamp instead of unsigned long long
  * struct xtDate created for convenient date / datetime conversion
  * Old time retrieval functions removed in favor of xtClockGetTime()

Removed:
- _base.h because it is no longer necessary thanks to the header inclusion style.
- xtFileGetPathFromFilePointer() because it was unused for a long time.
- Conversion functions in string.h because the new xtprintf family essentially
  replaces them, including: xtSizetToStr(), xtUint64ToStr() and xtInt64ToStr().

v0.8
----
New stuff:
- Added string demo
- Added xtFormatBytesSI() for metric system numbers
- Added xtList*Create() destruction guards
- Added xtSeedRand() and xtRandLLU()
- Major changes in Socket API
  * Added xtSocketPollRemoveByIndex()
  * Added functions to retrieve non-ready socket info

API changes:
- Added buffer length parameter to xtFormatCommasLL() and xtFormatCommasLLU()
- Changed many pointers parameters to restrict pointers
- Changed xtMutexDestroy() to always succeed
  Returning a bool is useless since it would segfault on failure
- Changed return type from xtThreadJoin() to void
- Major changes in Socket API
  Changed return type from many functions from unsigned to size_t
- Major changes with functions that take strings and buffer length
- Renamed xtClockFormatTime() to xtFormatTime()

Bug fixes:
- Fixed segfault with mutexes
- Fixed xtStringEndsWith() pointer offset underflow
- Fixed xtStringTrim() off by one error
- Fixed uninitialized data in xtConsoleFillLine()

v0.7
----

New stuff:
- Added Proc API
- Added xtQueue collection
- Created lots of new demos
- Created xtConsoleFillLine()
- Improved and extended xtHashmap & xtList

Bug fixes:
- Fixed xtStackPush*() resizing underflow
- Fixed xtStringReadline() null termination

v0.6
----

First real release
