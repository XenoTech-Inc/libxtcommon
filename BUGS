-----------------------------------------------------------------
                         KNOWN ISSUES
-----------------------------------------------------------------

# Windows

## Building

The library does not build properly with some cross compilers for
mingw32 because the linker fails with an undefined reference to
strtok_r.

## printf, fprintf, snprintf, vsnprintf

We have provided an extended and improved printf family for multiple
types that are not supported on Windows. This also fixes proper
NULL-termination if it does not fit on Windows. This is because of
Windows's major suckage. They do not honor the C standard.

# Linux

## File API

xtFileGetInfo(): creationTime is not available on Linux and always uses the
  UNIX epoch time in UTC instead.

## Proc API

xtProcGetName(): The parameters for the process (e.g. --width 50) are included
  in the returned path. This is undesired but it causes no harm.

## OS API

xtGetCPUInfo() is known to run very slow if the system is on high load.
A workaround has been written, but it is not stable and fast enough to
include in the library yet.

# Windows

## Proc API

xtProcGetMemoryInfo(): In the returned memory info structure, the 'swap' and
  'vmPeak' fields are always set to zero. This is because Windows gives us
  invalid fields with bogus values. We cannot reliably retrieve them.
xtProcKill(): Many signals on Windows are not supported and send a standard kill
  signal instead.
## Thread API

xtThreadCreate(): Specifying a guard size has no effect since the Windows
  API has no support for such a thing.
xtThreadSetName(), xtThreadGetName(): These both have no effect on Windows.
  The Windows API has no support for thread names until Windows 10 and up.
