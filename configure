#!/bin/bash
set -e
CC="gcc"
# This configure file, as well as the Makefile, need to be run trough Cygwin, because of commands and such, so be
# careful to choose the correct GCC compiler. (Cygwin's GCC or the GCC on your Windows)

# The (Path) name for the .a file
LIBPATH="lib"
LIBNAME="libxtcommon.a"
PREFIX=/usr
LOCALPREFIX=$PREFIX/local
INCLUDEDIR=$PREFIX/include
LIBDIR=$PREFIX/lib
LOCALINCLUDEDIR=$LOCALPREFIX/include
LOCALLIBDIR=$LOCALPREFIX/lib
GNULIBDIR=$LOCALLIBDIR
FINALLIBPATH="$LIBPATH/$LIBNAME"

SYSTEM=`uname -s 2>/dev/null`

WINARCH=w64-mingw32
win=no
is32bit=no

for i in "$@"; do
	case "$i" in
	windows*)
		shift 1
		case "$i" in
		windows-x86)
			WIN=i686-$WINARCH
			;;
		windows-x64)
			WIN=x86_64-$WINARCH
			;;
		*)
			echo Invalid target: $i 1>&2
			exit 1;;
		esac
		CC="$WIN"-gcc
		if ! hash "$CC" 2>/dev/null; then
			echo Missing windows toolchain 1>&2
			exit 1
		fi
		win=yes
		CFLAGS="-std=c99 -Wall -Wextra -pedantic -DWINVER=1536 -D_WIN32_WINNT=1536"
		OS_DIR="src/windows"
		;;
	--)
		break;;
	esac
done

if [ "$win" == no ]; then
	case "$SYSTEM" in
		Linux*)
			OS_DIR="src/linux"
			CFLAGS="-std=gnu99 -Wall -Wextra -pedantic"
			MACHINE_ARCH="$(uname -m)"
			if [ "$MACHINE_ARCH" != "x86_64" ]; then
				# Enable large file support if we're not on 64 bit
				CFLAGS="$CFLAGS -D_FILE_OFFSET_BITS=64"
				is32bit=yes
				# Use different directory for pkg-config
				GNULIBDIR=$LIBDIR/i386-linux-gnu
			fi
			;;
		CYGWIN*)
			OS_DIR="src/windows"
			# 1282 is Win XP with SP2
			# 1536 is Windows Vista
			CFLAGS="-std=c99 -Wall -Wextra -pedantic -DWINVER=1536 -D_WIN32_WINNT=1536"
			;;
		*)
			echo 'Unsupported system' 1>&2
			exit 1
			;;
	esac
fi

# Sanity check variables
if [ ! -d "$PREFIX" ]; then
	echo "Bad prefix $PREFIX: no directory" 2>&1
	exit 1
fi
if [ ! -d "$INCLUDEDIR" ]; then
	echo "Bad includedir $INCLUDEDIR: no directory" 2>&1
	exit 1
fi
if [ ! -d "$LIBDIR" ]; then
	echo "Bad libdir $LIBDIR: no directory" 2>&1
	exit 1
fi
if [ ! -d "$GNULIBDIR" ]; then
	echo "Bad gnulibdir $GNULIBDIR: no directory" 2>&1
	exit 1
fi

CFLAGS="$CFLAGS $*"
# Strip trailing spaces (see: http://www.cyberciti.biz/tips/bash-shell-parameter-substitution-2.html)
CFLAGS="${CFLAGS%% }"

cat <<EOF >src/generic/_buildopts.c
// Generated by configure
// Do not modify this!

#include <xt/utils.h>

#define expr(x) #x
#define str(x) expr(x)

const struct xtBuildOptions XT_BUILD_OPTIONS = {
	"$CFLAGS",
	"`date +'%Y-%m-%d'`",
	"v" str(XT_VERSION_MAJOR) "." str(XT_VERSION_MINOR) "." str(XT_VERSION_PATCH),
	XT_VERSION_MAJOR,
	XT_VERSION_MINOR,
	XT_VERSION_PATCH
};
EOF

MAKEFILE="Makefile"
echo Creating cross platform Makefile...
cat << EOF >$MAKEFILE
.PHONY: default install clean

CC=$CC
INCS=-I"include/"
CFLAGS=\$(INCS) $CFLAGS
CXXFLAGS=\$(CFLAGS)

EOF

FILES=`find src/generic $OS_DIR -name "*.c" -o -name "*.cpp"`
printf "OBJECTS =" >>$MAKEFILE
for i in $FILES; do
	printf " \\\\\n\t%s" `echo $i | sed -e 's/c$/o/' | sed -e 's/cpp$/o/'` >>$MAKEFILE
done

cat <<EOF >>$MAKEFILE


default: $FINALLIBPATH \$(OBJECTS)

EOF
cat <<EOF >>$MAKEFILE
xtcommon.pc: create_pkgconfig
	./create_pkgconfig
install: $FINALLIBPATH xtcommon.pc
	sudo cp -R include/* $LOCALINCLUDEDIR
	sudo cp lib/$LIBNAME $LOCALLIBDIR
	sudo cp xtcommon.pc $GNULIBDIR/pkgconfig

$FINALLIBPATH: \$(OBJECTS)
	mkdir -p $LIBPATH
	ar -cr $FINALLIBPATH \$(OBJECTS)

EOF
for i in $FILES; do
	dirs=$(dirname "${i}"); echo `echo "$dirs/" | sed -e 's/\.\///'``$CC $CFLAGS -MM $INCS $i | sed -e 's/\\\\/ /'` >>$MAKEFILE
	# Print an extra newline
	echo "" >>$MAKEFILE
done
cat <<EOF >>$MAKEFILE
clean:
	rm -f $FINALLIBPATH \$(OBJECTS)
EOF

cd ..

echo 'Makefile generated'
